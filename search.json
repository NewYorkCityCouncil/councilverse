[{"path":[]},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"install-package","dir":"Articles","previous_headings":"Getting Started","what":"Install Package","title":"councilverse","text":"","code":"# install the first time remotes::install_github(\"newyorkcitycouncil/councilverse\",build_vignettes = TRUE)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"load-package","dir":"Articles","previous_headings":"Getting Started","what":"Load Package","title":"councilverse","text":"","code":"library(tidyverse) library(leaflet) # load councilverse as the last package # councilverse also loads councildown and councilcount library(councilverse)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"example-project-using-councilverse-councildown-and-councilcount-functions","dir":"Articles","previous_headings":"Getting Started","what":"Example Project Using Councilverse, Councildown, and CouncilCount Functions","title":"councilverse","text":"use councilcount data example make plots maps using councilverse functions.","code":"# use councilcount::get_census_variables to check available variables census_vars <- get_census_variables() # use councilcount::get_geo_estimates to read in council district data for '% work from home' using 2013 council boundaries # borough, communitydist, councildist, nta, policeprct, schooldist geographies are available council_geo <- get_geo_estimates(\"councildist\", var_codes = \"DP03_0024E\", boundary_year = \"2013\")"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"visualize-data-and-determine-map-breaks","dir":"Articles","previous_headings":"Getting Started > Example Project Using Councilverse, Councildown, and CouncilCount Functions","what":"Visualize Data and Determine Map Breaks","title":"councilverse","text":"","code":"# check distribution of data (basic plot, without councildown) wfh_hist <- ggplot(data = council_geo, aes(percent_work_from_home_workers_16_and_older)) + geom_histogram(bins = 30) # use fisher-jenks natural breaks after visualizing data nat_intvl = classInt::classIntervals(council_geo$percent_work_from_home_workers_16_and_older, n = 5, style = 'fisher') # visualize breaks using councildown functions and styling ggplot(data = council_geo, aes(percent_work_from_home_workers_16_and_older)) +   # use second color from nycc_palette \"double\" for the histogram bars   geom_histogram(bins = 30, fill = pal_nycc(\"double\")[2], color = pal_nycc(\"double\")[2]) +   # use first color from nycc_palette \"double\" for the breaks   geom_vline(xintercept = nat_intvl$brks, color = pal_nycc(\"double\")[1]) +   labs(     x = \"% Work From Home\",     y = \"Count\",     title = \"Histogram of Work From Home Data\",     color = \"\"   ) +   # use councildown::theme_nycc() for ggplot styling   theme_nycc() +   # remove the legend   theme(legend.position=\"none\")"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"make-palette-for-map","dir":"Articles","previous_headings":"Getting Started > Example Project Using Councilverse, Councildown, and CouncilCount Functions","what":"Make Palette for Map","title":"councilverse","text":"","code":"# the function councildown::colorBin has default options for palette, bins, and na.color pal_council = colorBin(   # use nycc_blue, which is also the default palette for councildown::colorBin   palette = \"nycc_blue\",   # round to make sure data in the bottom and top bin are not left out   bins = round(nat_intvl$brks,2),   domain = council_geo$percent_work_from_home_workers_16_and_older,   # use the default NA color from councildown::colorBin   na.color = \"#FFFFFF\" )"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"create-map","dir":"Articles","previous_headings":"Getting Started > Example Project Using Councilverse, Councildown, and CouncilCount Functions","what":"Create Map","title":"councilverse","text":"","code":"map <- leaflet() %>%   # use councildown::addCouncilStyle() for leaflet styling   addCouncilStyle() %>%   # use the councildown::addPolygons default smoothFactor and weight   addPolygons(data = council_geo,               fillColor = ~pal_council(percent_work_from_home_workers_16_and_older),               fillOpacity = 1,               # use councildown::councilPopup to style popups               label = ~lapply(councilPopup(                 paste0(\"<h3>\", paste0(\"CD: \",councildist13), \"<\/h3>\",                        \"<p>\", paste0(\"Work From Home: \", percent_work_from_home_workers_16_and_older, \"%\"), \"<\/p>\")),                 htmltools::HTML)) %>%   # use councildown::addLegend_decreasing to reverse the ordering of the legend   addLegend_decreasing(position = \"topleft\", pal = pal_council,                        title = paste0(\"% Work From Home\"),                        values = c(0,1), opacity = 1, decreasing = T,                        labFormat = labelFormat(suffix = \"%\"),                        na.label = \"NA\") %>%   # use councildown::addSourceText to add source text on bottom right of map   addSourceText(lat = -73.75, lon = 40.53, \"Source: NYCC Data Team\") map # can add 2013 or 2023 council district boundaries to the map map_w_dists <- map %>%   # use councildown::addCouncilStyle to add the boundaries to the existing map   addCouncilStyle(add_dists = T, dist_year = \"2023\")  # note: can access council district shapefiles directly through the package councildown::nycc_cd_13 # 2013 council district lines councildown::nycc_cd_23 # 2023 council district lines"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"save-map","dir":"Articles","previous_headings":"Getting Started > Example Project Using Councilverse, Councildown, and CouncilCount Functions","what":"Save Map","title":"councilverse","text":"","code":"# save the map as static png  # use councilverse::file_name_generator to create standardized name for file map_png <- file_name_generator(description = \"council_district_percent_work_from_home\", date_year = 2022, file_extension = \".png\") # save the map using councildown::mapshot default zoom, vwidth, vheight, remove_controls mapshot(map, file = glue::glue(\"visuals/{map_png}\"))  # save the map as html map_html <- file_name_generator(description = \"council_district_percent_work_from_home\", date_year = 2022, file_extension = \".html\") # save leaflet html (this function is not a part of councilverse) htmlwidgets::saveWidget(map, file=glue::glue(\"visuals/{map_html}\"), selfcontained = T)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"councilverse","text":"CouncilVerse CouncilCount CouncilDown","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"graphs-and-tables","dir":"Articles","previous_headings":"Reference","what":"Graphs and Tables","title":"councilverse","text":"encodeGraphic() – Graphics raw HTML gt_table() – gt table raw HTML helper function","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"misc","dir":"Articles","previous_headings":"Reference","what":"Misc","title":"councilverse","text":"file_name_generator() – Helper function creating file names using accepted guidelines unzip_sf() – Helper function loading shapefiles come zipped","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"population-estimates","dir":"Articles","previous_headings":"Reference","what":"Population Estimates","title":"councilverse","text":"get_bbl_estimates() – Generates dataframe provides population estimates point level (also columns various geographies, like council district) get_census_variables() – Provides information ACS demographic variables can accessed using get_geo_estimates() via variable codes get_geo_estimates() – Creates dataframe provides population estimates selected demographic variables along chosen geographic boundaries (e.g. council district, borough, etc.)","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"plots","dir":"Articles","previous_headings":"Reference","what":"Plots","title":"councilverse","text":"theme_nycc() – ggplot2 theme uses Council fonts style guidelines produce plots scale_fill_nycc(), scale_color_nycc() – Color fill scales ggplot2 plots. Used replace scale_color_discrete(), scale_color_continuous(), scale_fill_discrete(), scale_fill_continuous()","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"colors","dir":"Articles","previous_headings":"Reference","what":"Colors","title":"councilverse","text":"pal_nycc() – Makes color palette using Council colors nycc_pal() DEPRECATED. Use pal_nycc instead","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"maps","dir":"Articles","previous_headings":"Reference","what":"Maps","title":"councilverse","text":"addCouncilStyle() – Adds Council styles including tiles, council district outlines, fonts leaflet map addSourceText() – Adds Council “Source” note bottom right leaflet map addPolygons() – leaflet function addPolygons default smoothFactor weight colorBin() – leaflet function colorBin default palette, bins, na.color councilPopup() – Basic styling leaflet popups mapshot() – Saves leaflet maps static png image defaults map saves standardized width, height, zoom addLegend_decreasing() – leaflet function addLegend option highest number top legend","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"data","dir":"Articles","previous_headings":"Reference","what":"Data","title":"councilverse","text":"nycc_cd_13 – 2013-2023 NYC Council District sf collection nycc_cd_23 – 2023-2033 NYC Council District sf collection","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"templates","dir":"Articles","previous_headings":"Reference","what":"Templates","title":"councilverse","text":"council_html() – Render Council HTML report council_pdf() – Render Council PDF report","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/articles/councilverse.html","id":"misc-1","dir":"Articles","previous_headings":"Reference","what":"Misc","title":"councilverse","text":"pretty_date – Make pretty date","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). councilverse: Easily Install Load packages 'councilverse'. R package version 2.0.0, https://newyorkcitycouncil.github.io/councilverse/.","code":"@Manual{,   title = {councilverse: Easily Install and Load all packages in the 'councilverse'},   author = {First Last},   year = {2024},   note = {R package version 2.0.0},   url = {https://newyorkcitycouncil.github.io/councilverse/}, }"},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"overview","dir":"","previous_headings":"","what":"Easily Install and Load all packages in the councilverse","title":"Easily Install and Load all packages in the councilverse","text":"councilverse set packages work tandem assist NYCC’s data team work. package designed make easy install load multiple ‘councilverse’ packages single step.","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Install and Load all packages in the councilverse","text":"can install released version councilverse GitHub","code":"remotes::install_github(\"newyorkcitycouncil/councilverse\",build_vignettes = TRUE)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"load-package","dir":"","previous_headings":"","what":"Load Package","title":"Easily Install and Load all packages in the councilverse","text":"Note order loading libraries important. Make sure load councilverse last.","code":"library(tidyverse) # load last library(councilverse)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"vignette","dir":"","previous_headings":"","what":"Vignette","title":"Easily Install and Load all packages in the councilverse","text":"demo 2 largest packages (councildown councilcount) available councilverse, see vignettes/councilverse.Rmd. using cmd:","code":"vignette(\"councilverse\",package= \"councilverse\")"},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Easily Install and Load all packages in the councilverse","text":"First load councilverse package .","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"councildown","dir":"","previous_headings":"Quick Start","what":"Councildown","title":"Easily Install and Load all packages in the councilverse","text":"councildown package implements style guide compliant defaults R Markdown documents, ggplot2 plots, leaflet maps. information, please visit package directly: https://github.com/NewYorkCityCouncil/councildown/ . councilverse vignette goes example using councildown’s available functions.","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"councilcount","dir":"","previous_headings":"Quick Start","what":"Councilcount","title":"Easily Install and Load all packages in the councilverse","text":"councilcount package allows easy access ACS population data across various geographic boundaries. boundaries native ACS, council districts, estimate provided. information, please visit package directly: https://github.com/NewYorkCityCouncil/councilcount/ . councilverse vignette goes example using councilcount’s available functions.","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"other-functions","dir":"","previous_headings":"Quick Start","what":"Other Functions","title":"Easily Install and Load all packages in the councilverse","text":"following functions standalone functions councilverse used niche situations.","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"graphs-and-tables","dir":"","previous_headings":"Quick Start > Other Functions","what":"Graphs and Tables","title":"Easily Install and Load all packages in the councilverse","text":"encodeGraphic() helps convert images raw HTML. useful adding extra graphics HTML element visualizations. gt_table() similarly converts gt outputs raw HTML. example functions used can found NYCHA Scrape repo: https://newyorkcitycouncil.github.io/NYCHA_Scrape/visualization/heat_outage_scatter.html","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/index.html","id":"misc","dir":"","previous_headings":"Quick Start > Other Functions","what":"Misc","title":"Easily Install and Load all packages in the councilverse","text":"file_name_generator() creates file names using accepted guidelines detailed function’s documentation. unzip_sf() loads shapefiles come originally zip files.","code":"# All fields used file_name_generator(order = \"01\", description = \"acs_poverty\", time_granularity = \"daily\", disaggregation_categories = c(\"cd\", \"race\"), date_year = 2018, file_extension = \".R\",... = \"example\") #> [1] \"01_acs-poverty_daily_by-cd-race_2018_example.R\" url <- \"https://www1.nyc.gov/assets/planning/download/zip/data-maps/open-data/nyct2020_22a.zip\" # unzip the zip file zip <- unzip_sf(url) # assign to variable with read_csv or other read functions sf <- sf::read_sf(zip)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/councilverse_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"List all packages imported by councilverse — councilverse_packages","title":"List all packages imported by councilverse — councilverse_packages","text":"List packages imported councilverse","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/councilverse_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all packages imported by councilverse — councilverse_packages","text":"","code":"councilverse_packages()"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/councilverse_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all packages imported by councilverse — councilverse_packages","text":"","code":"councilverse_packages() #> [1] \"cli\"          \"councildown\"  \"councilcount\" \"crayon\"       \"rstudioapi\"   #> [6] \"utils\"        \"htmltools\"    \"tidyverse\""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/encodeGraphic.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphics to raw HTML — encodeGraphic","title":"Graphics to raw HTML — encodeGraphic","text":"Helper function convert plot image raw HTML","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/encodeGraphic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphics to raw HTML — encodeGraphic","text":"","code":"encodeGraphic(g, style = \"style=\\\"width:150px;height:100px\\\"\", ...)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/encodeGraphic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphics to raw HTML — encodeGraphic","text":"g plot image object. style html style, default set width 150px height 100px ...","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/encodeGraphic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphics to raw HTML — encodeGraphic","text":"Raw HTML image","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/file_name_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for creating file names using accepted guidelines — file_name_generator","title":"Helper function for creating file names using accepted guidelines — file_name_generator","text":"Order file run (00-10) Dataset Name, Source, Location Time granularity (hourly, daily, minutely, yearly, etc.) Grouping categorizer ex ‘-age’, ‘-cd’, ‘-cd-age’ Date Year","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/file_name_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for creating file names using accepted guidelines — file_name_generator","text":"","code":"file_name_generator(   order = NULL,   description = NULL,   time_granularity = NULL,   disaggregation_categories = NULL,   date_year = NULL,   file_extension = NULL,   ... )"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/file_name_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for creating file names using accepted guidelines — file_name_generator","text":"order (string). sequential number ## format (applicable) file run description (string). dateset name, source, location time_granularity (string). Time granularity (e.g. 'hourly', 'daily', 'minutely', 'yearly', etc.) disaggregation_categories (string). Grouping categorizer; accepts vectors (e.g. 'age','cd',c('age','cd')) date_year (numeric). Date year file_extension (string). File extension (e.g. \".csv\") ... Add anything else back file name file extension","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/file_name_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for creating file names using accepted guidelines — file_name_generator","text":"string file output name","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/file_name_generator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for creating file names using accepted guidelines — file_name_generator","text":"","code":"if (FALSE) { # \\dontrun{ # All fields used file_name_generator(order = \"01\", description = \"acs_poverty\", time_granularity = \"daily\", disaggregation_categories = c(\"cd\", \"race\"), date_year = 2018, file_extension = \".R\",... = \"example\") # Shorter example file_name_generator(description = \"puma_internet\", date_year = 2022) } # }"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/gt_table.html","id":null,"dir":"Reference","previous_headings":"","what":"gt table to raw HTML helper function — gt_table","title":"gt table to raw HTML helper function — gt_table","text":"Helper function convert gt tables raw HTML side--side comparisons","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/gt_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gt table to raw HTML helper function — gt_table","text":"","code":"gt_table(x, currency_col = NA, percent_col = NA, extra_formats = NULL)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/gt_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gt table to raw HTML helper function — gt_table","text":"x gt table currency_col add currency formatting columns specified percent_col add percent formatting columns specified extra_formats add additional formatting","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/gt_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gt table to raw HTML helper function — gt_table","text":"Raw HTML gt table","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/unzip_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for loading in shapefiles that come zipped — unzip_sf","title":"Helper function for loading in shapefiles that come zipped — unzip_sf","text":"Helper function loading shapefiles come zipped","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/unzip_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for loading in shapefiles that come zipped — unzip_sf","text":"","code":"unzip_sf(zip_url)"},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/unzip_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for loading in shapefiles that come zipped — unzip_sf","text":"zip_url url file need download unzip ","code":""},{"path":"https://newyorkcitycouncil.github.io/councilverse/reference/unzip_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for loading in shapefiles that come zipped — unzip_sf","text":"temporary path file stored , ready pass st_read() ","code":""}]
